@use 'sass:math';
@use '/src/scss/layout.scss';


:host
{
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    handsign { font-size: 14px; } /* for shadow scaling */
}
@media only screen and (max-width: (layout.$breakpoint-desktop - 1)) { :host {
    height: 50%;
    aspect-ratio: 1;
    } }
@media only screen and (min-width: layout.$breakpoint-desktop) { :host {
    height: 100%;
    } }

.handsign-button
{
    border: none;
    background-color: transparent;

    & handsign:hover
    {
        box-shadow: none;
        font-size: 0; /* for shadow scaling */
    }
}


@mixin arrange-in-circle( $radius, $items-count, $item-index, $item-radius )
{
    position: absolute;
    margin: -$item-radius;
    height: 2*$item-radius;
    width: 2*$item-radius;

    $angle: 360deg / $items-count * ($item-index - 1);
    top: $radius * math.cos( 180deg - $angle ) + $radius;
    left: $radius * math.sin( 180deg - $angle ) + $radius;
}

.circle-container
{
    background-image: url("/assets/bg-pentagon.svg");
    background-repeat: no-repeat;
    background-position: top center;
    background-size: 90% 90%;

    position: relative;
    aspect-ratio: 1;

    @for $i from 1 through 5 { .circle-item-#{$i}
    {
        @include arrange-in-circle( 50%, 5, $i, 21% );
        & * {
            height: 100%;
            width: 100%;
            }
    } }
}
@media only screen and (max-width: (layout.$breakpoint-desktop - 1)) {
    .circle-container { height: 60vmin; }
    :host { padding: 12% 0; }
    }
@media only screen and (min-width: layout.$breakpoint-desktop) {
    .circle-container { height: 46vh; }
    :host { padding: 5% 0; }
    }

